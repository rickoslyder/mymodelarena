name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Lint and Type Check
  lint-and-typecheck:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install client dependencies
        run: |
          cd client
          npm ci
      
      - name: Install server dependencies
        run: |
          cd server
          npm ci
      
      - name: Lint client code
        run: |
          cd client
          npm run lint
      
      - name: Type check client
        run: |
          cd client
          npm run build
      
      - name: Type check server
        run: |
          cd server
          npm run build

  # Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install client dependencies
        run: |
          cd client
          npm ci
      
      - name: Install server dependencies
        run: |
          cd server
          npm ci
      
      - name: Setup test database
        run: |
          cd server
          npx prisma generate
          npx prisma migrate deploy
        env:
          DATABASE_URL: "file:./test.db"
      
      - name: Run server unit tests
        run: |
          cd server
          npm test
        env:
          DATABASE_URL: "file:./test.db"
      
      - name: Run client unit tests
        run: |
          cd client
          npm test -- --run

  # E2E Tests
  e2e-tests:
    runs-on: ubuntu-latest
    name: End-to-End Tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install client dependencies
        run: |
          cd client
          npm ci
      
      - name: Install server dependencies
        run: |
          cd server
          npm ci
      
      - name: Install Playwright browsers
        run: |
          cd client
          npx playwright install --with-deps
      
      - name: Setup test database
        run: |
          cd server
          npx prisma generate
          npx prisma migrate deploy
        env:
          DATABASE_URL: "file:./e2e-test.db"
      
      - name: Start server
        run: |
          cd server
          npm run dev &
        env:
          DATABASE_URL: "file:./e2e-test.db"
          PORT: 3001
      
      - name: Start client
        run: |
          cd client
          npm run dev &
        env:
          VITE_API_URL: http://localhost:3001
      
      - name: Wait for servers to start
        run: |
          npx wait-on http://localhost:3001/api/health http://localhost:5173 --timeout 60000
      
      - name: Run E2E tests
        run: |
          cd client
          npm run test:e2e
        env:
          CI: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: client/playwright-report/
          retention-days: 30

  # Build Verification
  build:
    runs-on: ubuntu-latest
    name: Build Verification
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install client dependencies
        run: |
          cd client
          npm ci
      
      - name: Install server dependencies
        run: |
          cd server
          npm ci
      
      - name: Build client
        run: |
          cd client
          npm run build
      
      - name: Build server
        run: |
          cd server
          npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            client/dist/
            server/dist/
          retention-days: 7

  # Security Audit
  security:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Audit client dependencies
        run: |
          cd client
          npm audit --audit-level=high
      
      - name: Audit server dependencies
        run: |
          cd server
          npm audit --audit-level=high

  # Deployment (only on main branch)
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [lint-and-typecheck, unit-tests, e2e-tests, build, security]
    runs-on: ubuntu-latest
    name: Deploy to Production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      
      - name: Deploy notification
        run: |
          echo "ðŸš€ Ready for production deployment!"
          echo "All tests passed and build verified."